/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import com.mysql.cj.jdbc.result.ResultSetMetaData;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Airam
 */
public class CitaBs extends javax.swing.JFrame {

    /**
     * Creates new form CitaBs
     */
    public CitaBs() {
        initComponents();
        setLocationRelativeTo(null);
        llenarT();
    }
    
    public void llenarT (){
        try{
          DefaultTableModel modelo = new DefaultTableModel();
          jTable1.setModel(modelo);
          
          Connection cn =DriverManager.getConnection("jdbc:mysql://localhost/tattoo_studio_db", "root", "");
          String sql= "SELECT idCita, nomClienteCita,diaInicio, mesInicio, anoInicio, diaFinal, mesFinal,anoFinal, idTatuadorCita FROM cita";
          PreparedStatement pst = cn.prepareStatement(sql);
          ResultSet rs = pst.executeQuery();
          
          ResultSetMetaData rsMd = (ResultSetMetaData) rs.getMetaData();
          int cantidadColumnas =rsMd.getColumnCount();
          
          modelo.addColumn("ID Cita");
          modelo.addColumn("Nombre del Cliente");
          modelo.addColumn("Día Inicio");
          modelo.addColumn("Mes Inicio");
          modelo.addColumn("Año Inicio");
          modelo.addColumn("Día Final");      
          modelo.addColumn("Mes Final");  
          modelo.addColumn("Año Final"); 
          modelo.addColumn("ID Tatuador"); 
           int[] anchos ={40,150,35,35,40,35,35,40,40};
          
          for (int x =0; x< cantidadColumnas;x++  ){
          jTable1.getColumnModel().getColumn(x).setPreferredWidth(anchos[x]);
          }
          while (rs.next()){
             
              Object[] filas = new Object[cantidadColumnas];
              for (int i =0; i< cantidadColumnas; i++){
                  filas[i]= rs.getObject(i+1);
              }
             modelo.addRow(filas);
          }
          
        }catch(SQLException ex){
            System.err.println(ex.toString());
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Old English Text MT", 0, 44)); // NOI18N
        jLabel1.setText("Búsqueda");

        jLabel2.setFont(new java.awt.Font("Palatino Linotype", 0, 16)); // NOI18N
        jLabel2.setText("Nombre del Cliente:");

        jTextField1.setFont(new java.awt.Font("Trebuchet MS", 0, 14)); // NOI18N

        jButton1.setFont(new java.awt.Font("Sitka Small", 0, 11)); // NOI18N
        jButton1.setText("BUSCAR");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "ID", "Nombre del Cliente", "Fecha de Reservación", "Fecha Final", "Tatuador", "Monto"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTable1);
        if (jTable1.getColumnModel().getColumnCount() > 0) {
            jTable1.getColumnModel().getColumn(0).setResizable(false);
            jTable1.getColumnModel().getColumn(1).setResizable(false);
            jTable1.getColumnModel().getColumn(2).setResizable(false);
            jTable1.getColumnModel().getColumn(3).setResizable(false);
            jTable1.getColumnModel().getColumn(4).setResizable(false);
            jTable1.getColumnModel().getColumn(5).setResizable(false);
        }

        jButton2.setText("Regresar al Menú de Citas");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(63, 63, 63)
                        .addComponent(jLabel2)
                        .addGap(18, 18, 18)
                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 294, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton1))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jButton2)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 31, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 669, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 319, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(32, 32, 32)
                .addComponent(jButton2)
                .addContainerGap(52, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
         String campo = jTextField1.getText();
             String where ="";
        
            if(!"".equals(campo)){
                    where = "WHERE nombre = '" + campo + "'";
             try{
          DefaultTableModel modelo = new DefaultTableModel();
          jTable1.setModel(modelo);
          
          Connection cn =DriverManager.getConnection("jdbc:mysql://localhost/tattoo_studio_db", "root", "");
          String sql= "SELECT idCita, nomClienteCita,diaInicio, mesInicio, anoInicio, diaFinal, mesFinal,anoFinal, idTatuadorCita FROM cita "+ where;
          PreparedStatement pst = cn.prepareStatement(sql);
          ResultSet rs = pst.executeQuery();
          
          ResultSetMetaData rsMd = (ResultSetMetaData) rs.getMetaData();
          int cantidadColumnas =rsMd.getColumnCount();
          
          modelo.addColumn("ID Cita");
          modelo.addColumn("Nombre del Cliente");
          modelo.addColumn("Día Inicio");
          modelo.addColumn("Mes Inicio");
          modelo.addColumn("Año Inicio");
          modelo.addColumn("Día Final");      
          modelo.addColumn("Mes Final");  
          modelo.addColumn("Año Final"); 
          modelo.addColumn("ID Tatuador"); 
           int[] anchos ={40,150,35,35,40,35,35,40,40};
          
          for (int x =0; x< cantidadColumnas;x++  ){
          jTable1.getColumnModel().getColumn(x).setPreferredWidth(anchos[x]);
          }
          while (rs.next()){
             
              Object[] filas = new Object[cantidadColumnas];
              for (int i =0; i< cantidadColumnas; i++){
                  filas[i]= rs.getObject(i+1);
              }
             modelo.addRow(filas);
          }
          
        }catch(SQLException ex){
            System.err.println(ex.toString());
        }
            }else{
          JOptionPane.showMessageDialog(null, "OPCIÓN INVALIDA" );
          
            }
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CitaBs.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CitaBs.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CitaBs.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CitaBs.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CitaBs().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables
}
